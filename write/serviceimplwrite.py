import os
import os.path
import write.condefine as cf
import config as conf

def serviceimplwrite (tabletotal):
	path = 'java\\'+cf.classname+'\\' +cf.classname+ cf.serviceimplfile
	isExists=os.path.exists(path)
	if not isExists:
		print (path+' 创建成功')
	else:
		print (path+' 目录已存在')
		f = open('java\\'+ cf.classname+'\\' +cf.classname+ cf.serviceimplfile,"r+")
		read_data = f.read()
		f.seek(0)
		f.truncate()
		f.close()
	f1 = open('java\\'+ cf.classname+'\\' +cf.classname + cf.serviceimplfile,'a') 
	str = cf.modelpackage + " " + conf.packagetxt + "service;"
	f1.write (str + '\n')
	f1.write ('\n')
	f1.write('import org.springframework.beans.factory.annotation.Autowired;\n')
	f1.write('import org.springframework.stereotype.Service;\n')
	f1.write('import java.util.List;\n')
	f1.write ('\n\n')
	f1.write ('import ' + conf.packagetxt + 'dao.' + cf.classname + 'Dao;\n')
	f1.write ('import ' + conf.packagetxt + cf.xmlmodel + cf.classname)
	f1.write (';\n\n')
	f1.write ('@Service\n')
	f1.write ('public class ' + cf.classname + "ServiceImpl implements "+ cf.classname +"Service {")
	f1.write ('\n\t')
	f1.write ('@Autowired')
	f1.write ('\n\tprivate ' + cf.classname + "Dao " + cf.classname[0].lower() + cf.classname[1:] + "Dao;")
	f1.write ('\n\t')
	f1.write ('@Override')
	f1.write ('\n\t')
	f1.write ('public void '+ cf.xmlinsert + cf.classname)
	f1.write ('('+cf.classname+ ' ' + cf.classname[0].lower() + cf.classname[1:] + '){')
	f1.write ('\n\t\t')
	f1.write (cf.classname[0].lower() + cf.classname[1:] + "Dao.")
	f1.write (cf.xmlinsert + cf.classname + "("+cf.classname[0].lower() + cf.classname[1:]+");")
	f1.write ('\n\t}')
	f1.write ('\n\t')
	f1.write ('@Override')
	f1.write ('\n\t')
	f1.write ('public void '+ cf.xmlupdate + cf.classname)
	f1.write ('('+cf.classname+ ' ' + cf.classname[0].lower() + cf.classname[1:] + '){')
	f1.write ('\n\t\t')
	f1.write (cf.classname[0].lower() + cf.classname[1:] + "Dao.")
	f1.write (cf.xmlupdate + cf.classname + "("+cf.classname[0].lower() + cf.classname[1:]+");")
	f1.write ('\n\t}')
	f1.write ('\n\t')
	f1.write ('@Override')
	f1.write ('\n\t')
	f1.write ('public void '+ cf.xmldelete + cf.classname)
	f1.write ('(String uniqueNums[]){')
	f1.write ('\n\t\t')
	f1.write (cf.classname[0].lower() + cf.classname[1:] + "Dao.")
	f1.write (cf.xmldelete + cf.classname + "(uniqueNums);")
	f1.write ('\n\t}')
	f1.write ('\n\t')
	f1.write ('@Override')
	f1.write ('\n\t')
	f1.write ('public List<'+ cf.classname + '> '+ cf.xmlselect + cf.classname)
	f1.write ('(String ' + tabletotal[0][0])
	f1.write ('){\n')
	f1.write ('\n\t\t')
	f1.write ("return " + cf.classname[0].lower() + cf.classname[1:] + "Dao.")
	f1.write (cf.xmlselect + cf.classname + "("+tabletotal[0][0]+");")
	f1.write ('\n\t}')
	f1.write ('\n}')